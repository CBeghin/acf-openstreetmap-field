!function(){var o,t,i,n,e,a;o=jQuery,t=acf_osm,window,i=t.options,n=t.providers,e=!1,a=!1,L.Control.ResetLayers=L.Control.extend({onAdd:function(){return this._container=L.DomUtil.create("div","leaflet-control-add-location-marker leaflet-bar leaflet-control"),this._link=L.DomUtil.create("a","leaflet-bar-part leaflet-bar-part-single",this._container),this._icon=L.DomUtil.create("span","dashicons dashicons-image-rotate",this._link),L.DomEvent.on(this._link,"click",L.DomEvent.stopPropagation).on(this._link,"click",L.DomEvent.preventDefault).on(this._link,"click",this._onClick,this).on(this._link,"dblclick",L.DomEvent.stopPropagation),this._container},onRemove:function(){L.DomEvent.off(this._link,"click",L.DomEvent.stopPropagation).off(this._link,"click",L.DomEvent.preventDefault).off(this._link,"click",this._onClick,this).off(this._link,"dblclick",L.DomEvent.stopPropagation)},_onClick:function(){this._map.eachLayer((function(o){o.remove()}))}}),o(document).on("acf-osm-map-init",(function(t){var s=t.detail.map;s.on("layeradd",(function(o){var t,i,n=o.layer;if(s.hasLayer(n)){if(n.options.bounds){var e=L.latLngBounds(n.options.bounds);s.fitBounds(e,{paddingTopLeft:[0,0],paddingBottomRight:[0,0]})}(t=s.getZoom())!==(i=Math.max(n.options.minZoom,Math.min(t,n.options.maxZoom)))&&s.setZoom(i)}})),new L.Control.ResetLayers({position:"topright"}).addTo(s),o(document).on("click",".acf-osm-settings [data-layer]",(function(t){t.preventDefault(),function(o){var t,r;if(r=i.layer_config[o.split(".")[0]]||{options:{}},(t=L.tileLayer.provider(o,r.options)).provider_key=o,function(o){var t=o.split("."),i=n[t.shift()];return!!i.isOverlay||(t.length&&(i=i.variants[t.shift()]),!!i.isOverlay)}(o)){if(a&&(a.remove(),a.provider_key===o))return void(a=!1);(a=t).addTo(s)}else e&&(s.eachLayer((function(o){o.remove()})),a=!1),(e=t).addTo(s),a&&(a.remove(),a.addTo(s))}(o(this).data("layer"))})).on("change",'.osm-disable[type="checkbox"]',(function(t){o(this).closest(".acf-osm-setting").toggleClass("disabled",o(this).prop("checked"))}))}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,