!function(m,e,t){e.options;var n=t.osm={};n.MarkerData=Backbone.Model.extend({isDefaultLabel:function(){return this.get("label")===this.get("default_label")}}),n.MarkerCollection=Backbone.Collection.extend({model:n.MarkerData}),n.MapData=Backbone.Model.extend({initialize:function(e){this.set("markers",new n.MarkerCollection(e.markers)),Backbone.Model.prototype.initialize.apply(this,arguments)}}),n.MarkerEntry=wp.media.View.extend({tagName:"div",className:"osm-marker",template:wp.template("osm-marker-input"),events:{'click [data-name="locate-marker"]':"locate_marker",'click [data-name="remove-marker"]':"remove_marker",'change [data-name="label"]':"update_marker_label"},initialize:function(e){return wp.media.View.prototype.initialize.apply(this,arguments),this.marker=e.marker,(this.marker.osm_controller=this).model=e.model,this.listenTo(this.model,"change:label",this.changedLabel),this.listenTo(this.model,"change:default_label",this.changedDefaultLabel),this.listenTo(this.model,"change:lat",this.changedlatLng),this.listenTo(this.model,"change:lng",this.changedlatLng),this.listenTo(this.model,"destroy",this.remove),this.render()},changedLabel:function(){var e=this.model.get("label");this.$('[data-name="label"]').val(e),this.marker.unbindTooltip(),this.marker.bindTooltip(e),this.marker.options.title=e,m(this.marker._icon).attr("title",e)},changedDefaultLabel:function(){this.model.get("label")===this.model.previous("default_label")&&this.model.set("label",this.model.get("default_label"))},changedlatLng:function(){this.marker.setLatLng({lat:this.model.get("lat"),lng:this.model.get("lng")})},render:function(){wp.media.View.prototype.render.apply(this,arguments);var t=this;return this.$el.find('[data-name="label"]').on("focus",function(e){t.hilite_marker()}).on("blur",function(e){t.lolite_marker()}).val(this.model.get("label")),m(this.marker._icon).on("focus",function(e){t.hilite_marker()}).on("blur",function(e){t.lolite_marker()}),this},update_marker_label:function(e){var t=m(e.target).val();return""===t&&(t=this.model.get("default_label")),this.model.set("label",t),this},update_marker_geocode:function(e){return this.model.isDefaultLabel()&&this.set_marker_label(e),this.$el.find('[id$="-marker-geocode"]').val(e),this._update_values_from_marker(),this},_update_values_from_marker:function(){var e=this.marker.getLatLng();return this.model.set("lat",e.lat.toFixed(6)),this.model.set("lng",e.lng.toFixed(6)),this.model.set("label",this.marker.options.title),this},hilite_marker:function(e){this.$el.addClass("focus"),m(this.marker._icon).addClass("focus")},lolite_marker:function(e){this.$el.removeClass("focus"),m(this.marker._icon).removeClass("focus")},locate_marker:function(){return this.marker._map.flyTo(this.marker.getLatLng()),this},remove_marker:function(e){return e.preventDefault(),this.model.destroy(),this}}),n.Field=Backbone.View.extend({map:null,geocoder:null,visible:null,$parent:function(){return this.$el.closest(".acf-field-settings,.acf-field-open-street-map")},$value:function(){return this.$parent().find("input.osm-json")},$results:function(){return this.$parent().find(".osm-results")},$markers:function(){return this.$parent().find(".osm-markers")},initialize:function(e){var t=this,a=this.getMapData();return this.map=e.map,this.model=new n.MapData(a),this.init_acf(),this.initLayers(),this.initMarkers(),this.listenTo(this.model,"change",this.updateValue),this.listenTo(this.model.get("markers"),"add",this.addMarker),this.listenTo(this.model.get("markers"),"add",this.updateValue),this.listenTo(this.model.get("markers"),"remove",this.updateValue),this.listenTo(this.model.get("markers"),"change",this.updateValue),this.map.on("zoomend",function(){t.model.set("zoom",t.map.getZoom())}),this.map.on("moveend",function(){var e=t.map.getCenter();t.model.set("center_lat",e.lat.toFixed(6)),t.model.set("center_lng",e.lng.toFixed(6))}),this.update_visible(),this.update_map(),this},getMapData:function(){return JSON.parse(this.$value().val())},updateValue:function(){this.$value().val(JSON.stringify(this.model.toJSON()))},addMarker:function(a,e){var i=this,t=L.marker({lat:a.get("lat"),lng:a.get("lng")},{title:a.get("label"),icon:this.icon}).bindTooltip(a.get("label")),r=new n.MarkerEntry({controller:this,marker:t,model:a});this.map.once("layeradd",function(e){t.on("click",function(e){a.destroy()}).on("dragend",function(e){var t=this.getLatLng();a.set("lat",t.lat.toFixed(6)),a.set("lng",t.lng.toFixed(6)),i.reverseGeocode(a)}).dragging.enable(),r.$el.appendTo(i.$markers())}),a.on("destroy",function(){t.remove()}),t.addTo(this.map)},initMarkers:function(){var r=this,o=this.$el.data().editorConfig;this.initGeocode(),0!==o.max_markers&&(this.icon=new L.DivIcon({html:"",className:"osm-marker-icon"}),this.model.get("markers").forEach(function(e){r.addMarker(e)}),this.map.on("dblclick",function(e){var t,a=e.latlng,i=r.$markers().children().not("[data-id]").length;e.originalEvent.preventDefault(),e.originalEvent.stopPropagation(),!1!==o.max_markers&&i>=o.max_markers||(t=new n.MarkerData({label:"",default_label:"",lat:a.lat,lng:a.lng}),r.model.get("markers").add(t),r.reverseGeocode(t))}).doubleClickZoom.disable())},initGeocode:function(){var n=this;this.$el.data().editorConfig;this.map._controlCorners.above=m('<div class="acf-osm-above"></div>').insertBefore(this.$el).get(0),this.geocoder=L.Control.geocoder({collapsed:!1,position:"above",placeholder:"Search...",errorMessage:"Nothing found...",showResultIcons:!0,suggestMinLength:3,suggestTimeout:250,queryMinLength:3,defaultMarkGeocode:!1}).on("markgeocode",function(e){var t=e.geocode.center,a=n.$el.data().editorConfig,i=n.model.get("markers").length,r=n.parseGeocodeResult([e.geocode],t),o={label:r,default_label:r,lat:t.lat,lng:t.lng};if(0===a.max_markers)return n.map.fitBounds(e.geocode.bbox);i<a.max_markers?n.model.get("markers").add(o):1===a.max_markers&&n.model.get("markers").at(0).set(o),n.map.setView(t,n.map.getZoom())}).addTo(this.map)},reverseGeocode:function(t){var a=this,i={lat:t.get("lat"),lng:t.get("lng")};this.geocoder.options.geocoder.reverse(i,a.map.getZoom(),function(e){t.set("default_label",a.parseGeocodeResult(e,i))})},parseGeocodeResult:function(e,t){var a=!1;return e.length?m.each(e,function(e,t){return a=t.html?m("<p>"+t.html+"</p>").text().trim().replace(/(\s+)/g," "):t.name,!1}):a=t.lat.toFixed(6)+", "+t.lng.toFixed(6),a},initLayers:function(){var i=this,r=[],o={},n={},l={},s=this.$el.data().editorConfig,d=function(e,t){var a;if(_.isObject(e))return m.each(e,d);if(!function(e){return null===e||!!s.restrict_providers&&-1===s.restrict_providers.indexOf(e)}(t)){if(l[t])a=l[t],i.map.addLayer(a);else{try{a=L.tileLayer.provider(t)}catch(e){return}a.providerKey=t}i.layer_is_overlay(t,a)?n[t]=a:o[t]=a,-1!==r.indexOf(t)&&i.map.addLayer(a)}};r=this.model.get("layers"),!1!==s.restrict_providers&&_.isArray(s.restrict_providers)&&(r=r.filter(function(e){return-1!==s.restrict_providers.indexOf(e)})),r.length||(r=s.restrict_providers.slice(0,1)),s.allow_providers&&this.map.on("baselayerchange layeradd layerremove",function(e){if(e.layer.providerKey){var t=[];i.map.eachLayer(function(e){e.providerKey&&(i.layer_is_overlay(e.providerKey,e)?t.push(e.providerKey):t.unshift(e.providerKey))}),i.model.set("layers",t)}}),m.each(s.restrict_providers,d),s.allow_providers&&(this.layersControl=L.control.layers(o,n,{collapsed:!0,hideSingleBase:!0}).addTo(this.map))},layer_is_overlay:function(e,t){var a;return!!(t.options.opacity&&t.options.opacity<1)||(a=["^(OpenWeatherMap|OpenSeaMap)","OpenMapSurfer.AdminBounds","Stamen.Toner(Hybrid|Lines|Labels)","Acetate.(foreground|labels|roads)","HillShading","Hydda.RoadsAndLabels","^JusticeMap","OpenInfraMap.(Power|Telecom|Petroleum|Water)","OpenPtMap","OpenRailwayMap","OpenFireMap","SafeCast","CartoDB.DarkMatterOnlyLabels","CartoDB.PositronOnlyLabels"],null!==e.match("("+a.join("|")+")"))},resetLayers:function(){this.map.eachLayer(function(e){e.constructor===L.TileLayer.Provider&&e.remove()}),this.layersControl&&this.layersControl.remove()},update_visible:function(){return this.visible===this.$el.is(":visible")||(this.visible=this.$el.is(":visible"),this.visible&&this.map.invalidateSize()),this},init_acf:function(){function e(){t.update_visible()}var t=this;acf.addAction("show",e),acf.addAction("hide",e),m(document).on("postbox-toggled",e),m(document).on("click",".widget-top *",e)},update_map:function(){this.map.setView(L.latLng(this.model.get("center_lat"),this.model.get("center_lng")),this.model.get("zoom"))}}),m(document).on("acf-osm-map-init",function(t,a){m(t.target).closest('[data-id="acfcloneindex"]').length?t.preventDefault():m(t.target).is("[data-editor-config]")&&(t.preventDefault(),function e(){if(!m(t.target).is(":visible"))return setTimeout(e,250);a.invalidateSize()}(),m(t.target).data("_map_editor",new n.Field({el:t.target,map:a})))}),acf.addAction("append",function(){m.acf_leaflet()}),acf.addAction("show_field/type=open_street_map",function(e){e.$el.find("[data-editor-config]").data("_map_editor").update_visible()})}(jQuery,acf_osm_admin,window);