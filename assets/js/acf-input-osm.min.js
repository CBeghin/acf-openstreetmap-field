!function(e,t){var r=t.options,a={};a.MarkerList=Backbone.View.extend({}),a.MarkerEntry=Backbone.View.extend({tagName:"div",className:"osm-marker",events:{'click [data-name="locate-marker"]':"locate_marker",'click [data-name="remove-marker"]':"remove_marker",'change [id$="-marker-label"]':"update_marker_label"},get_label:function(){return this.$el.find('[id$="-marker-label"]').val()},get_default_label:function(){return this.$el.find('[id$="-marker-geocode"]').val()},is_default_label:function(){return this.get_default_label()===this.get_label()},initialize:function(e){return this.template=e.template,this.marker=e.marker,this.marker.osm_controller=this,this},render:function(){return this.$el.html(this.template(this)),this._update_values_from_marker(),this},update_marker_label:function(t){var r=this.get_label();return""===r&&(r=this.get_default_label()),e(t.target).val(r),this.set_marker_label(r)},set_marker_label:function(t){return this.marker.unbindTooltip(),this.marker.bindTooltip(t),this.marker.options.title=t,e(this.marker._icon).attr("title",t),this},update_marker_geocode:function(e){return this.is_default_label()&&this.set_marker_label(e),this.$el.find('[id$="-marker-geocode"]').val(e),this._update_values_from_marker(),this},_update_values_from_marker:function(){var e=this.marker.getLatLng();return this.$el.find('[id$="-marker-lat"]').val(e.lat),this.$el.find('[id$="-marker-lng"]').val(e.lng),this.$el.find('[id$="-marker-label"]').val(this.marker.options.title),this},locate_marker:function(){return this.marker._map.flyTo(this.marker.getLatLng()),e(this.marker._icon).focus(),this},remove_marker:function(e){return e.preventDefault(),this.marker.remove(),this}}),a.field=Backbone.View.extend({map:null,geocoder:null,visible:null,events:{},$parent:function(){return this.$el.closest(".acf-field-settings,.acf-field-open-street-map")},$zoom:function(){return this.$parent().find('input[id$="-zoom"]')},$lat:function(){return this.$parent().find('input[id$="-center_lat"]')},$lng:function(){return this.$parent().find('input[id$="-center_lng"]')},$layerStore:function(){return this.$parent().find(".acf-osm-layers")},$results:function(){return this.$parent().find(".osm-results")},$markers:function(){return this.$parent().find(".osm-markers")},initialize:function(e){return this.map=e.map,this.update_map(),this.init_acf(),this.init_layers(),this.init_markers(),this.update_visible(),this},_get_geocoder_result_label:function(t,r){var a=!1;return t.length?e.each(t,function(e,t){return a=t.html?t.html:t.name,!1}):a=r.lat.toString()+", "+r.lng.toString(),e(a).text().replace(/^(\s+)/g,"").replace(/(\s+)$/g,"").replace(/(\s+)/g," ")},init_markers:function(){var t=this,r=this.$el.data().editorConfig;this.init_geocode(),0!==r.max_markers&&(this.icon=new L.DivIcon({html:"",className:"osm-marker-icon"}),this.map.on("click",function(e){var a=e.latlng,i=t.$markers().children().not("[data-id]").length;!1!==r.max_markers&&i>=r.max_markers||t.geocoder.options.geocoder.reverse(e.latlng,t.map.getZoom(),function(e){var r=t._get_geocoder_result_label(e,a);t.add_marker(a,r)},t)}),this.map.on("layeradd",function(e){if(e.layer.constructor===L.Marker){var r=t.$markers().find('[data-id="__osm_marker_template__"]').html().split("__osm_marker_template__").join("<%= id %>"),i=new a.MarkerEntry({controller:this,marker:e.layer,id:acf.uniqid(),template:_.template(r)});i.render().$el.prependTo(t.$markers()),t.geocode_marker(i),e.layer.setIcon(t.icon).on("click",function(e){this.remove()}).on("remove",function(e){i.$el.remove()}).on("dragend",function(e){t.geocode_marker(i),t.$el.trigger("change")}).dragging.enable()}}),e.each(this.$el.data().mapMarkers,function(e,r){L.marker(L.latLng(1*r.lat,1*r.lng),{title:r.label}).bindTooltip(r.label).addTo(t.map)}))},geocode_marker:function(e){var t=this,r=e,a=r.marker.getLatLng();t.geocoder.options.geocoder.reverse(a,t.map.getZoom(),function(e){var i=t._get_geocoder_result_label(e,a);r.update_marker_geocode(i)},this)},add_marker:function(e,t){L.marker(e,{title:t,icon:this.icon}).bindTooltip(t).addTo(this.map),this.$el.trigger("change")},layer_is_overlay:function(e,t){var r;return!!(t.options.opacity&&t.options.opacity<1)||(r=["^(OpenWeatherMap|OpenSeaMap)","OpenMapSurfer.AdminBounds","Stamen.Toner(Hybrid|Lines|Labels)","Acetate.(foreground|labels|roads)","HillShading","Hydda.RoadsAndLabels","^JusticeMap","OpenInfraMap.(Power|Telecom|Petroleum|Water)","OpenPtMap","OpenRailwayMap","OpenFireMap","SafeCast","CartoDB.DarkMatterOnlyLabels","CartoDB.PositronOnlyLabels"],null!==e.match("("+r.join("|")+")"))},reset_layers:function(){this.map.eachLayer(function(e){e.constructor===L.TileLayer.Provider&&e.remove()}),this.$layerStore().remove(),!!this.layersControl&&this.layersControl.remove()},init_layers:function(){var t=this,a=[],i={},n={},o={},s=this.$el.data().editorConfig,l=function(e){return null===e||!!s.restrict_providers&&-1===s.restrict_providers.indexOf(e)},d=function(s,m){var c,u;if(_.isObject(m))return e.each(m,d);l(s)||(o[s]?(c=o[s],t.map.addLayer(c)):(u=r.layer_config[s.split(".")[0]]||{options:{}},c=L.tileLayer.provider(s,u.options),c.providerKey=s),t.layer_is_overlay(s,c)?n[s]=c:i[s]=c,-1!==a.indexOf(s)&&t.map.addLayer(c))};a=this.$el.data().mapLayers,!1!==s.restrict_providers&&_.isArray(s.restrict_providers)&&(a=a.filter(function(e){return-1!==s.restrict_providers.indexOf(e)})),a.length||(a=Object.keys(r.providers).slice(0,1)),s.allow_providers&&(e('<div class="acf-osm-layers"></div>').insertAfter(this.$el),this.map.on("baselayerchange layeradd layerremove",function(r){if(r.layer.providerKey){var a=t.$layerStore();t.$parent().find('[data-id="__osm_layer_template__"]');a.html(""),t.map.eachLayer(function(r){var i;r.providerKey&&(i=e('<input type="hidden" name="'+s.name_prefix+'[layers][]" />'),i.val(r.providerKey),t.layer_is_overlay(r.providerKey,r)?a.append(i):a.prepend(i))}),t.$el.trigger("change")}})),e.each(r.providers,d),this.$layerStore().length&&(this.layersControl=L.control.layers(i,n,{collapsed:!0,hideSingleBase:!0}).addTo(this.map))},init_geocode:function(){var t=this;this.$el.data().editorConfig;this.map._controlCorners.above=e('<div class="acf-osm-above"></div>').insertBefore(this.$el).get(0),this.geocoder=L.Control.geocoder({collapsed:!1,position:"above",placeholder:"Search...",errorMessage:"Nothing found...",showResultIcons:!0,suggestMinLength:3,suggestTimeout:250,queryMinLength:3,defaultMarkGeocode:!1}).on("markgeocode",function(e){var r=e.geocode.center,a=t.$el.data().editorConfig,i=t.$markers().children().not("[data-id]").length,n=t._get_geocoder_result_label([e.geocode],r);(!1===i||i<a.max_markers)&&t.add_marker(r,n),1===a.max_markers&&1===i&&(marker=t.get_first_marker(),marker&&(entry=marker.osm_controller,marker.setLatLng(r),entry.update_marker_geocode(n))),0===a.max_markers?t.map.fitBounds(e.geocode.bbox):t.map.setView(r,t.map.getZoom())}).addTo(this.map),L.DomEvent.addListener(this.geocoder._input,"keydown",function(e){13===e.keyCode&&e.preventDefault()},this.geocoder)},get_first_marker:function(){var e=!1;return this.map.eachLayer(function(t){if(t.constructor===L.Marker)return e=t,!1}),e},update_visible:function(){return this.visible===this.$el.is(":visible")?this:(this.visible=this.$el.is(":visible"),this.visible?(this.map.invalidateSize(),this.bind_events(),this):(this.unbind_events(),this))},init_acf:function(){var t=this,r=function(){t.update_visible()};acf.addAction("show",r),acf.addAction("hide",r),acf.addAction("disable_field",function(){t.unbind_events()}),e(document).on("postbox-toggled",r),e(document).on("click",".widget-top *",r)},unbind_events:function(){var e=this;e.$lat().off("blur"),e.$lng().off("blur"),e.$zoom().off("blur"),e.$zoom().off("keyup focus"),this.map.off("zoomend",this.map_zoomed,this),this.map.off("moveend",this.map_moved,this)},bind_events:function(){var e=this;e.$lat().on("blur",function(t){e.update_map()}),e.$lng().on("blur",function(t){e.update_map()}),e.$zoom().on("blur",function(t){e.update_map()}),this.map.on("zoomend",this.map_zoomed,this),this.map.on("moveend",this.map_moved,this)},update_map:function(){if(this.$lat().val()&&this.$lng().val()){var e=L.latLng(this.$lat().val(),this.$lng().val());this.map.setView(e,this.$zoom().val())}},map_moved:function(e){var t=this.map.getCenter();this.$lat().val(t.lat),this.$lng().val(t.lng),this.$el.trigger("change")},map_zoomed:function(e){this.$zoom().val(this.map.getZoom()),this.$el.trigger("change")}}),e(document).on("acf-osm-map-init",function(t,r){t.preventDefault(),e(t.target).data("_map_editor",new a.field({el:t.target,map:r}))}).on("change",'[data-name="return_format"] input',function(r){e('[data-name="return_format"] input:checked').val();var a=e(this).closest(".acf-field-object").find("[data-editor-config]"),i=a.data("_map_editor"),n=a.data("editor-config");i.reset_layers(),"osm"===e(this).val()?n.restrict_providers=Object.values(t.options.osm_layers):n.restrict_providers=!1,a.data("editor-config",n),i.init_layers()}),acf.addAction("append",function(){e.acf_leaflet()})}(jQuery,acf_osm_admin);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
