!function(c,i){i.options;var n={};n.MarkerList=Backbone.View.extend({}),n.MarkerEntry=Backbone.View.extend({tagName:"div",className:"osm-marker",events:{'click [data-name="locate-marker"]':"locate_marker",'click [data-name="remove-marker"]':"remove_marker",'change [id$="-marker-label"]':"update_marker_label"},get_label:function(){return this.$el.find('[id$="-marker-label"]').val()},get_default_label:function(){return this.$el.find('[id$="-marker-geocode"]').val()},is_default_label:function(){return this.get_default_label()===this.get_label()},initialize:function(e){return this.template=e.template,this.marker=e.marker,this.marker.osm_controller=this},render:function(){var t=this;return this.$el.html(this.template(this)),this._update_values_from_marker(),this.$el.find('[id$="-marker-label"]').on("focus",function(e){t.hilite_marker()}).on("blur",function(e){t.lolite_marker()}),c(this.marker._icon).on("focus",function(e){t.hilite_marker()}).on("blur",function(e){t.lolite_marker()}),this},update_marker_label:function(e){var t=this.get_label();return""===t&&(t=this.get_default_label()),c(e.target).val(t),this.set_marker_label(t)},set_marker_label:function(e){return this.marker.unbindTooltip(),this.marker.bindTooltip(e),this.marker.options.title=e,c(this.marker._icon).attr("title",e),this},update_marker_geocode:function(e){return this.is_default_label()&&this.set_marker_label(e),this.$el.find('[id$="-marker-geocode"]').val(e),this._update_values_from_marker(),this},_update_values_from_marker:function(){var e=this.marker.getLatLng();return this.$el.find('[id$="-marker-lat"]').val(e.lat),this.$el.find('[id$="-marker-lng"]').val(e.lng),this.$el.find('[id$="-marker-label"]').val(this.marker.options.title),this},hilite_marker:function(e){this.$el.addClass("focus"),c(this.marker._icon).addClass("focus")},lolite_marker:function(e){this.$el.removeClass("focus"),c(this.marker._icon).removeClass("focus")},locate_marker:function(){return this.marker._map.flyTo(this.marker.getLatLng()),this},remove_marker:function(e){return e.preventDefault(),this.marker.remove(),this}}),n.field=Backbone.View.extend({map:null,geocoder:null,visible:null,events:{},$parent:function(){return this.$el.closest(".acf-field-settings,.acf-field-open-street-map")},$zoom:function(){return this.$parent().find('input[id$="-zoom"]')},$lat:function(){return this.$parent().find('input[id$="-center_lat"]')},$lng:function(){return this.$parent().find('input[id$="-center_lng"]')},$layerStore:function(){return this.$parent().find(".acf-osm-layers")},$results:function(){return this.$parent().find(".osm-results")},$markers:function(){return this.$parent().find(".osm-markers")},initialize:function(e){return this.map=e.map,this.update_map(),this.init_acf(),this.init_layers(),this.init_markers(),this.update_visible(),this},_get_geocoder_result_label:function(e,t){var r=!1;return e.length?c.each(e,function(e,t){return r=t.html?t.html:t.name,!1}):r=t.lat.toString()+", "+t.lng.toString(),c("<p>"+r+"</p>").text().replace(/^(\s+)/g,"").replace(/(\s+)$/g,"").replace(/(\s+)/g," ")},init_markers:function(){var a=this,i=this.$el.data().editorConfig;this.init_geocode(),0!==i.max_markers&&(this.icon=new L.DivIcon({html:"",className:"osm-marker-icon"}),this.map.on("click",function(e){var r=e.latlng,t=a.$markers().children().not("[data-id]").length;!1!==i.max_markers&&t>=i.max_markers||a.geocoder.options.geocoder.reverse(e.latlng,a.map.getZoom(),function(e){var t=a._get_geocoder_result_label(e,r);a.add_marker(r,t)},a)}),this.map.on("layeradd",function(e){if(e.layer.constructor===L.Marker){var t=a.$markers().find('[data-id="__osm_marker_template__"]').html().split("__osm_marker_template__").join("<%= id %>"),r=new n.MarkerEntry({controller:this,marker:e.layer,id:acf.uniqid(),template:_.template(t)});r.render().$el.appendTo(a.$markers()),a.geocode_marker(r),e.layer.setIcon(a.icon).on("click",function(e){this.remove()}).on("remove",function(e){r.$el.remove(),a.$el.trigger("change")}).on("dragend",function(e){a.geocode_marker(r),a.$el.trigger("change")}).dragging.enable()}}),this.map.on("layerremove",function(e){e.layer.constructor===L.Marker&&a.$el.trigger("change")}),c.each(this.$el.data().mapMarkers,function(e,t){L.marker(L.latLng(1*t.lat,1*t.lng),{title:t.label}).bindTooltip(t.label).addTo(a.map)}))},geocode_marker:function(e){var r=this,a=e,i=a.marker.getLatLng();r.geocoder.options.geocoder.reverse(i,r.map.getZoom(),function(e){var t=r._get_geocoder_result_label(e,i);a.update_marker_geocode(t)},this)},add_marker:function(e,t){L.marker(e,{title:t,icon:this.icon}).bindTooltip(t).addTo(this.map),this.$el.trigger("change")},layer_is_overlay:function(e,t){var r;return!!(t.options.opacity&&t.options.opacity<1)||(r=["^(OpenWeatherMap|OpenSeaMap)","OpenMapSurfer.AdminBounds","Stamen.Toner(Hybrid|Lines|Labels)","Acetate.(foreground|labels|roads)","HillShading","Hydda.RoadsAndLabels","^JusticeMap","OpenInfraMap.(Power|Telecom|Petroleum|Water)","OpenPtMap","OpenRailwayMap","OpenFireMap","SafeCast","CartoDB.DarkMatterOnlyLabels","CartoDB.PositronOnlyLabels"],null!==e.match("("+r.join("|")+")"))},reset_layers:function(){this.map.eachLayer(function(e){e.constructor===L.TileLayer.Provider&&e.remove()}),this.$layerStore().remove(),this.layersControl&&this.layersControl.remove()},init_layers:function(){var a=this,i=[],n={},o={},s={},l=this.$el.data().editorConfig,d=function(e,t){var r;if(_.isObject(e))return c.each(e,d);if(!function(e){return null===e||!!l.restrict_providers&&-1===l.restrict_providers.indexOf(e)}(t)){if(s[t])r=s[t],a.map.addLayer(r);else{try{r=L.tileLayer.provider(t)}catch(e){return}r.providerKey=t}a.layer_is_overlay(t,r)?o[t]=r:n[t]=r,-1!==i.indexOf(t)&&a.map.addLayer(r)}};i=this.$el.data().mapLayers,!1!==l.restrict_providers&&_.isArray(l.restrict_providers)&&(i=i.filter(function(e){return-1!==l.restrict_providers.indexOf(e)})),i.length||(i=Object.keys(l.restrict_providers).slice(0,1)),l.allow_providers&&(c('<div class="acf-osm-layers"></div>').insertAfter(this.$el),this.map.on("baselayerchange layeradd layerremove",function(e){if(e.layer.providerKey){var r=a.$layerStore();a.$parent().find('[data-id="__osm_layer_template__"]');r.html(""),a.map.eachLayer(function(e){var t;e.providerKey&&((t=c('<input type="hidden" name="'+l.name_prefix+'[layers][]" />')).val(e.providerKey),a.layer_is_overlay(e.providerKey,e)?r.append(t):r.prepend(t))}),a.$el.trigger("change")}})),c.each(l.restrict_providers,d),this.$layerStore().length&&(this.layersControl=L.control.layers(n,o,{collapsed:!0,hideSingleBase:!0}).addTo(this.map))},init_geocode:function(){var n=this;this.$el.data().editorConfig;this.map._controlCorners.above=c('<div class="acf-osm-above"></div>').insertBefore(this.$el).get(0),this.geocoder=L.Control.geocoder({collapsed:!1,position:"above",placeholder:"Search...",errorMessage:"Nothing found...",showResultIcons:!0,suggestMinLength:3,suggestTimeout:250,queryMinLength:3,defaultMarkGeocode:!1}).on("markgeocode",function(e){var t=e.geocode.center,r=n.$el.data().editorConfig,a=n.$markers().children().not("[data-id]").length,i=n._get_geocoder_result_label([e.geocode],t);(!1===a||a<r.max_markers)&&n.add_marker(t,i),1===r.max_markers&&1===a&&(marker=n.get_first_marker(),marker&&(entry=marker.osm_controller,marker.setLatLng(t),entry.update_marker_geocode(i))),0===r.max_markers?n.map.fitBounds(e.geocode.bbox):n.map.setView(t,n.map.getZoom())}).addTo(this.map)},get_first_marker:function(){var t=!1;return this.map.eachLayer(function(e){if(e.constructor===L.Marker)return t=e,!1}),t},update_visible:function(){return this.visible===this.$el.is(":visible")?this:(this.visible=this.$el.is(":visible"),this.visible?(this.map.invalidateSize(),this.bind_events()):this.unbind_events(),this)},init_acf:function(){function e(){t.update_visible()}var t=this;acf.addAction("show",e),acf.addAction("hide",e),acf.addAction("disable_field",function(){t.unbind_events()}),c(document).on("postbox-toggled",e),c(document).on("click",".widget-top *",e)},unbind_events:function(){this.$lat().off("blur"),this.$lng().off("blur"),this.$zoom().off("blur"),this.$zoom().off("keyup focus"),this.map.off("zoomend",this.map_zoomed,this),this.map.off("moveend",this.map_moved,this)},bind_events:function(){var t=this;t.$lat().on("blur",function(e){t.update_map()}),t.$lng().on("blur",function(e){t.update_map()}),t.$zoom().on("blur",function(e){t.update_map()}),this.map.on("zoomend",this.map_zoomed,this),this.map.on("moveend",this.map_moved,this)},update_map:function(){if(this.$lat().val()&&this.$lng().val()){var e=L.latLng(this.$lat().val(),this.$lng().val());this.map.setView(e,this.$zoom().val())}},map_moved:function(e){var t=this.map.getCenter();this.$lat().val(t.lat),this.$lng().val(t.lng),this.$el.trigger("change")},map_zoomed:function(e){this.$zoom().val(this.map.getZoom()),this.$el.trigger("change")}}),c(document).on("acf-osm-map-init",function(t,r){c(t.target).closest('[data-id="acfcloneindex"]').length?t.preventDefault():c(t.target).is("[data-editor-config]")&&(t.preventDefault(),function e(){if(!c(t.target).is(":visible"))return setTimeout(e,250);r.invalidateSize()}(),c(t.target).data("_map_editor",new n.field({el:t.target,map:r})))}).on("change",'[data-type="open_street_map"] [data-name="return_format"] input',function(e){c('[data-name="return_format"] input:checked').val();var t=c(this).closest(".acf-field-object").find("[data-editor-config]"),r=t.data("_map_editor"),a=t.data("editor-config");r.reset_layers(),"osm"===c(this).val()?a.restrict_providers=Object.values(i.options.osm_layers):a.restrict_providers=Object.values(i.options.leaflet_layers),t.data("editor-config",a),r.init_layers()}),acf.addAction("append",function(){c.acf_leaflet()}),acf.addAction("show_field/type=open_street_map",function(e){e.$el.find("[data-editor-config]").data("_map_editor").update_visible()})}(jQuery,acf_osm_admin);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
