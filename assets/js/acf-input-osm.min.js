!function(e,t){var a=t.options,i={};i.MarkerList=Backbone.View.extend({}),i.MarkerEntry=Backbone.View.extend({tagName:"div",className:"osm-marker",default_state:!0,events:{'click [data-name="locate-marker"]':"locate_marker",'click [data-name="remove-marker"]':"remove_marker",'change [type="text"]':"set_default_state"},is_default_label:function(){var e=this.$el.find('[id$="-marker-default-label"]').val();return!e||this.$el.find('[id$="-marker-label"]').val()===e},initialize:function(e){return this.template=e.template,this.marker=e.marker,this},render:function(){return this.$el.html(this.template(this)),this},update_marker:function(t,a){return this.is_default_label()&&(this.marker.unbindTooltip(),this.marker.bindTooltip(a),this.marker.options.title=a,e(this.marker._icon).attr("title",a),this.$el.find('[id$="-marker-label"]').val(this.marker.options.title)),this.$el.find('[id$="-marker-lat"]').val(t.lat),this.$el.find('[id$="-marker-lng"]').val(t.lng),this.$el.find('[id$="-marker-default-label"]').val(a),this},locate_marker:function(){return this.marker._map.flyTo(this.marker.getLatLng()),e(this.marker._icon).focus(),this},remove_marker:function(e){return e.preventDefault(),this.marker.remove(),this}}),i.field=Backbone.View.extend({map:null,geocoder:null,visible:null,events:{},$parent:function(){return this.$el.closest(".acf-field-settings,.acf-field-open-street-map")},$zoom:function(){return this.$parent().find('input[id$="-zoom"]')},$lat:function(){return this.$parent().find('input[id$="-center_lat"]')},$lng:function(){return this.$parent().find('input[id$="-center_lng"]')},$layerStore:function(){return this.$parent().find(".acf-osm-layers")},$results:function(){return this.$parent().find(".osm-results")},$markers:function(){return this.$parent().find(".osm-markers")},initialize:function(e){return this.map=e.map,this.update_map(),this.init_acf(),this.init_layers(),this.init_markers(),this.update_visible(),this},_get_geocoder_result_label:function(t,a){var i=!1;return t.length?e.each(t,function(e,t){return i=t.html?t.html:t.name,!1}):i=a.lat.toString()+", "+a.lng.toString(),e(i).text().replace(/^(\s+)/g,"").replace(/(\s+)$/g,"")},init_markers:function(){var e=this;this.icon=new L.DivIcon({html:"",className:"osm-marker-icon"}),this.init_geocode(),this.map.on("click",function(t){var a=t.latlng;e.geocoder.options.geocoder.reverse(t.latlng,e.map.getZoom(),function(t){var i=e._get_geocoder_result_label(t,a);e.add_marker(a,i)},e)}),this.map.on("layeradd",function(t){if(t.layer.constructor===L.Marker){var a=e.$markers().find('[data-id="__osm_marker_template__"]').html().split("__osm_marker_template__").join("<%= id %>"),n=new i.MarkerEntry({controller:this,marker:t.layer,id:acf.uniqid(),template:_.template(a)});n.render().$el.prependTo(e.$markers()),t.layer.setIcon(e.icon).on("click",function(e){this.remove()}).on("remove",function(e){n.$el.remove()}).on("dragend",function(t){parseInt(n.default_state)&&e.geocoder.options.geocoder.reverse(this.getLatLng(),e.map.getZoom(),function(t){var a=this.getLatLng(),i=e._get_geocoder_result_label(t,a);n.update_marker(a,i)},this)}).dragging.enable()}})},add_marker:function(e,t){L.marker(e,{title:t,icon:this.icon}).bindTooltip(t).addTo(this.map)},layer_is_overlay:function(e,t){var a;return!!(t.options.opacity&&t.options.opacity<1)||(a=["^(OpenWeatherMap|OpenSeaMap)","OpenMapSurfer.AdminBounds","Stamen.Toner(Hybrid|Lines|Labels)","Acetate.(foreground|labels|roads)","HillShading","Hydda.RoadsAndLabels","^JusticeMap","OpenInfraMap.(Power|Telecom|Petroleum|Water)","OpenPtMap","OpenRailwayMap","OpenFireMap","SafeCast","CartoDB.DarkMatterOnlyLabels","CartoDB.PositronOnlyLabels"],null!==e.match("("+a.join("|")+")"))},init_layers:function(){var t=this,i=[],n={},r={},o={},l=function(e){return null===e},s=function(d,c){var m,u;if(_.isObject(c))return e.each(c,s);l(d)||(o[d]?(m=o[d],t.map.addLayer(m)):(u=a.layer_config[d.split(".")[0]]||{options:{}},m=L.tileLayer.provider(d,u.options),m.providerKey=d),t.layer_is_overlay(d,m)?r[d]=m:n[d]=m,-1!==i.indexOf(d)&&t.map.addLayer(m))};i=this.$el.data().mapLayers,e.each(a.providers,s),this.$layerStore().length&&(this.layersControl=L.control.layers(n,r,{collapsed:!0,hideSingleBase:!0}).addTo(this.map))},init_geocode:function(){var t=this;this.map._controlCorners.above=e('<div class="acf-osm-above"></div>').insertBefore(this.$el).get(0),this.geocoder=L.Control.geocoder({collapsed:!1,position:"above",placeholder:"Search...",errorMessage:"Nothing found...",showResultIcons:!0,suggestMinLength:3,suggestTimeout:250,queryMinLength:3,defaultMarkGeocode:!1}).on("markgeocode",function(e){var a=t._get_geocoder_result_label([e.geocode],e.geocode.center);t.add_marker(e.geocode.center,a),t.map.fitBounds(e.geocode.bbox)}).addTo(this.map),L.DomEvent.addListener(this.geocoder._input,"keydown",function(e){13===e.keyCode&&e.preventDefault()},this.geocoder)},update_visible:function(){return this.visible===this.$el.is(":visible")?this:(this.visible=this.$el.is(":visible"),this.visible?(this.map.invalidateSize(),this.bind_events(),this):(this.unbind_events(),this))},init_acf:function(){var t=this,a=function(){t.update_visible()};acf.addAction("show",a),acf.addAction("hide",a),e(document).on("postbox-toggled",a),this.map.on("zoomend",function(e){t.map_zoomed.apply(t,[e])}),this.map.on("moveend",function(e){t.map_moved.apply(t,[e])}),t.$layerStore().length&&this.map.on("baselayerchange layeradd layerremove",function(e){if(e.layer.providerKey){var a=t.$layerStore(),i=t.$parent().find('[data-id="__osm_layer_template__"]');a.html(""),t.map.eachLayer(function(e){if(e.providerKey){var n=i.clone().removeAttr("data-id");n.val(e.providerKey),t.layer_is_overlay(e.providerKey,e)?a.append(n):a.prepend(n)}})}})},unbind_events:function(){var e=this;e.$lat().off("blur"),e.$lng().off("blur"),e.$zoom().off("blur"),e.$zoom().off("keyup focus")},bind_events:function(){var e=this;e.$lat().on("blur",function(t){e.update_map()}),e.$lng().on("blur",function(t){e.update_map()}),e.$zoom().on("blur",function(t){e.update_map()})},update_map:function(){if(this.$lat().val()&&this.$lng().val()){var e=L.latLng(this.$lat().val(),this.$lng().val());this.map.setView(e,this.$zoom().val())}},map_moved:function(e){var t=this.map.getCenter();this.$lat().val(t.lat),this.$lng().val(t.lng)},map_zoomed:function(e){this.$zoom().val(this.map.getZoom())}}),e(document).on("acf-osm-map-init",function(e,t){e.preventDefault(),new i.field({el:e.target,map:t})})}(jQuery,acf_osm_admin);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
