!function(t,e){var i=e.options,n={};n.field=Backbone.View.extend({map:null,geocoder:null,visible:null,events:{},$parent:function(){return this.$el.closest(".acf-field-settings,.acf-field-open-street-map")},$zoom:function(){return this.$parent().find('input[id$="-zoom"]')},$lat:function(){return this.$parent().find('input[id$="-center_lat"]')},$lng:function(){return this.$parent().find('input[id$="-center_lng"]')},$layerStore:function(){return this.$parent().find('input[id$="-leaflet_layers"]')},$address:function(){return this.$parent().find('input[id$="-address"]')},$mlat:function(){return this.$parent().find('input[id$="-marker_lat"]')},$mlng:function(){return this.$parent().find('input[id$="-marker_lng"]')},$results:function(){return this.$parent().find(".osm-results")},initialize:function(t){this.map=t.map,this.update_map(),this.init_layers(),this.$mlat().length&&this.$mlng().length&&this.init_marker(),this.init_geocode(),this.init_acf(),this.update_visible()},init_marker:function(){var t=this,e=this.$mlat().val()||this.$lat().val(),i=this.$mlng().val()||this.$lng().val();this.icon=L.divIcon({className:"osm-marker",html:"",iconSize:0}),this.marker=L.marker([e,i],{icon:this.icon,draggable:!0,title:this.$address().val()||""}).addTo(this.map),this.map.on("click",function(e){t.map_clicked.apply(t,[e])})},map_clicked:function(t){t.latlng;this.set_marker(t.latlng)},set_marker:function(e){t(this.marker._icon).attr("title",this.marker.title),this.marker.setLatLng(e),this.$mlat().val(e.lat),this.$mlng().val(e.lng)},init_layers:function(){var e,n=this,a={},s={},r=function(t,e){var i;return!!(e.options.opacity&&e.options.opacity<1)||(i=["^(OpenWeatherMap|OpenSeaMap)","OpenMapSurfer.AdminBounds","Stamen.Toner(Hybrid|Lines|Labels)","Acetate.(foreground|labels|roads)","HillShading","Hydda.RoadsAndLabels","^JusticeMap","OpenInfraMap.(Power|Telecom|Petroleum|Water)","OpenPtMap","OpenRailwayMap","OpenFireMap","SafeCast","CartoDB.DarkMatterOnlyLabels","CartoDB.PositronOnlyLabels"],null!==t.match("("+i.join("|")+")"))},o=function(t){return null===t},l=function(u,d){var c,h;if(_.isObject(d))return t.each(d,l);o(u)||(h=i.layer_config[u.split(".")[0]]||{options:{}},c=L.tileLayer.provider(u,h.options),c.providerKey=u,r(u,c)?s[u]=c:a[u]=c,-1!==e.indexOf(u)&&n.map.addLayer(c))};e=this.$el.data().mapLayers,this.map.eachLayer(function(t){n.map.removeLayer(t)}),t.each(i.providers,l),this.$layerStore().length&&(this.layersControl=L.control.layers(a,s,{collapsed:!0,hideSingleBase:!0}).addTo(this.map))},init_geocode:function(){this.geocoder=L.Control.geocoder({collapsed:!1,position:"topleft",placeholder:"Search...",errorMessage:"Nothing found...",showResultIcons:!0,suggestMinLength:3,suggestTimeout:250,queryMinLength:3}).addTo(this.map)},update_visible:function(){return this.visible===this.$el.is(":visible")?this:(this.visible=this.$el.is(":visible"),this.visible?(this.map.invalidateSize(),this.bind_events(),this):(this.unbind_events(),this))},init_acf:function(){var e=this,i=function(){e.update_visible()};acf.addAction("show",i),acf.addAction("hide",i),t(document).on("postbox-toggled",i),this.map.on("zoomend",function(t){e.map_zoomed.apply(e,[t])}),this.map.on("moveend",function(t){e.map_moved.apply(e,[t])}),this.map.on("baselayerchange overlayadd overlayremove layeradd layerremove",function(t){var i=[];e.map.eachLayer(function(t){i.push(t.providerKey)}),e.$layerStore().val(JSON.stringify(i))})},unbind_events:function(){var t=this;t.$lat().off("blur"),t.$lng().off("blur"),t.$zoom().off("blur"),t.$zoom().off("keyup focus")},bind_events:function(){var t=this;t.$lat().on("blur",function(e){t.update_map()}),t.$lng().on("blur",function(e){t.update_map()}),t.$zoom().on("blur",function(e){t.update_map()})},update_map:function(){if(this.$lat().val()&&this.$lng().val()){var t=L.latLng(this.$lat().val(),this.$lng().val());this.map.setView(t,this.$zoom().val())}},map_moved:function(t){var e=this.map.getCenter();this.$lat().val(e.lat),this.$lng().val(e.lng)},map_zoomed:function(t){this.$zoom().val(this.map.getZoom())},search:function(t){var e=this,i={};return void 0!==this._wait_address&&(clearTimeout(this._wait_address),delete this._wait_address),this.clear_results(),"keyup"==t.type&&27==t.originalEvent.keyCode?(t.preventDefault(),this.$results().html(""),this.$address().blur(),!1):""===this.$address().val()?void(this.marker.title=""):void(this._wait_address=setTimeout(function(){i={q:e.$address().val(),limit:5,lon:e.$lng().val(),lat:e.$lat().val()},e.ajax_get("https://photon.komoot.de/api/",i,function(t){e.build_results(t),delete this._wait_address})},666))},select_result:function(t){var e=L.latLng(t.coord[1],t.coord[0]);t.ext?this.map.fitBounds(L.latLngBounds(L.latLng(t.ext[1],t.ext[0]),L.latLng(t.ext[3],t.ext[2]))):this.map.setView(e,this.map.getZoom()),this.$address().val(t.text),this.clear_results(),this.marker.title=t.text,this.set_marker(e)},build_results:function(e){var i=this,n=e.features.length,a=this.$address().val(),s=e.features;this.clear_results(),n&&t.each(s,function(e,n){var s=i.format_result(n),r=s.replace(new RegExp("("+a.split(/[^a-z0-9]/).join("|")+")","gi"),"<strong>$1</strong>");r+="<br /><small>("+i.nice_words(n.properties.osm_value)+")</small>",t('<div tabindex="'+e+'" class="osm-result"></div>').html(r).appendTo(i.$results()).on("click",function(t){i.select_result({text:s,bounds:n.properties.extent,coord:n.geometry.coordinates})})})},clear_results:function(){this.$results().html("")},format_result:function(t){return this.get_result_words(t).join(", ")},get_result_words:function(e){var i=[],n=["name","street","housenumber","city","postcode","state","country"];return t.each(n,function(t,n){try{e.properties[n]&&i.push(e.properties[n])}catch(t){}}),Array.from(new Set(i))},nice_words:function(t){return t.split(/[\s_]/).map(function(t){return t[0].toUpperCase()+t.substring(1)}).join(" ")},ajax_get:function(e,i,n){var a=this;t.ajax({url:e,method:"get",data:i,success:function(t){"function"==typeof n&&n.apply(a,[t])}})}}),t(document).on("render-map",function(t,e){new n.field({el:t.target,map:e})})}(jQuery,acf_osm_admin);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
