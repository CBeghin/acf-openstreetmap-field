!function(t){var e=acf_osm.options;console.log("sefsef");var s={};s.field=Backbone.View.extend({$map:null,$zoom:null,$lat:null,$lng:null,$address:null,$tiles:null,marker:null,icon:null,map:null,layers:[],events:{'keyup [data-prop="address"]':"search",'focus [data-prop="address"]':"search","click .osm-result":"click_result","keyup .osm-result":"keyup_result","focus .osm-result":"focus_result"},initialize:function(){this.$map=this.$el.find(".acf-osm-map"),this.$zoom=this.$el.find('[data-prop="zoom"]'),this.$lat=this.$el.find('[data-prop="center_lat"]'),this.$lng=this.$el.find('[data-prop="center_lng"]'),this.$layers=this.$el.find('[data-prop="map_layers"]'),this.$address=this.$el.find('[data-prop="address"]'),this.$results=this.$address.next(".osm-results"),this.icon=L.divIcon({className:"osm-marker",html:"",iconSize:0}),this.map=L.map(this.$map.get(0),{scrollWheelZoom:!1,center:[this.$lat.val(),this.$lng.val()],zoom:this.$zoom.val()}),this.marker=L.marker([this.$lat.val(),this.$lng.val()],{icon:this.icon,title:this.$address.val()}).addTo(this.map),console.log(this.marker),this.layers=[],this.$layers.is("select")&&acf.select2.init(this.$layers,{multiple:!0,ui:!0,allow_null:!1,ajax:!1},this.$el),this.bind_events(),this.update_layers()},bind_events:function(){var t=this;this.listenTo(this.$tiles,"change",this.update_layers),this.map.on("zoomend",function(e){t.map_zoomed.apply(t,[e])}),this.map.on("moveend",function(e){t.map_moved.apply(t,[e])}),this.map.on("click",function(e){t.map_clicked.apply(t,[e])})},map_moved:function(t){var e=this.map.getCenter();this.$lat.val(e.lat),this.$lng.val(e.lng)},map_zoomed:function(t){this.$zoom.val(this.map.getZoom())},map_clicked:function(t){this.fetch_results("https://photon.komoot.de/reverse",{lon:t.latlng.lng,lat:t.latlng.lat},function(t){var e,s=0,a=t.features.length;for(s;s<a;s++){e=this.format_result(t.features[s]);break}this.marker.title=e}),this.set_marker(t.latlng)},set_marker:function(e){t(this.marker._icon).attr("title",this.marker.title),this.marker.setLatLng(e)},update_layers:function(){var s,a,i,l,r=[];if(null!==r){for(this.$layers.each(function(){var e=t(this).val();Array.isArray(r)?r=r.concat(e):r.push(e)});this.layers.length;)this.map.removeLayer(this.layers.pop());for(l=r.length,i=0;i<l;i++)s=r[i],a=e.layer_config[s.split(".")[0]]||{},this.layers.push(L.tileLayer.provider(s,a).addTo(this.map))}},search:function(t){var e=this,s={};if(void 0!==this._wait_address&&(clearTimeout(this._wait_address),delete this._wait_address),!s.g||s.g!==this.$address.val())return 27==t.originalEvent.keyCode?(t.preventDefault(),this.$results.html(""),this.$address.blur(),!1):void(this._wait_address=setTimeout(function(){s={q:e.$address.val(),limit:5,lon:e.$lng.val(),lat:e.$lat.val()},e.fetch_results("https://photon.komoot.de/api/",s,function(t){delete this._wait_address})},666))},clear_results:function(){this.$results.html("")},build_results:function(e){var s=this,a=e.features.length,i=this.$address.val(),l=e.features;this.clear_results(),a&&t.each(l,function(e,a){var l=t('<div tabindex="'+e+'" class="osm-result"></div>'),r=s.format_result(a),n=r.replace(new RegExp("("+i.split(/[^a-z0-9]/).join("|")+")","gi"),"<strong>$1</strong>");n+="<br /><small>("+s.nice_words(a.properties.osm_value)+")</small>",l.data({text:r,bounds:a.properties.extent,coord:a.geometry.coordinates}).html(n).appendTo(s.$results)})},fetch_results:function(e,s,a){var i=this;t.ajax({url:e,method:"get",data:s,success:function(t){i.build_results(t),"function"==typeof a&&a.apply(i,[t])}})},click_result:function(e){var s=t(e.target).data(),a=L.latLng(s.coord[1],s.coord[0]);s.ext?this.map.fitBounds(L.latLngBounds(L.latLng(s.ext[1],s.ext[0]),L.latLng(s.ext[3],s.ext[2]))):this.map.setView(a,this.map.getZoom()),this.$address.val(s.text),this.clear_results(),this.marker.title=s.text,this.set_marker(a)},keyup_result:function(e){40==e.originalEvent.keyCode?(t(e.target).next(".osm-result").focus(),e.preventDefault()):38==e.originalEvent.keyCode&&(t(e.target).prev(".osm-result").focus(),e.preventDefault())},focus_result:function(e){var s=t(e.target).data();s.ext?this.map.fitBounds(L.latLngBounds(L.latLng(s.ext[1],s.ext[0]),L.latLng(s.ext[3],s.ext[2]))):this.map.setView(L.latLng(s.coord[1],s.coord[0]),this.map.getZoom())},format_result:function(t){return this.get_result_words(t).join(", ")},get_result_words:function(e){var s=[],a=["name","street","housenumber","city","postcode","state","country"];return t.each(a,function(t,a){try{e.properties[a]&&s.push(e.properties[a])}catch(t){}}),Array.from(new Set(s))},nice_words:function(t){return t.split(/[\s_]/).map(function(t){return t[0].toUpperCase()+t.substring(1)}).join(" ")}}),void 0!==acf.add_action?acf.add_action("ready append",function(t){acf.get_fields({type:"open_street_map"},t).each(function(){new s.field({el:this})})}):t(document).on("acf/setup_fields",function(e,a){t(a).find('.field[data-field_type="open_street_map"]').each(function(){new s.field({el:this})})})}(jQuery);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
