!function(e,t){var a=t.options,i={};i.MarkerList=Backbone.View.extend({}),i.MarkerEntry=Backbone.View.extend({tagName:"div",className:"osm-marker",events:{'click [data-name="locate-marker"]':"locate_marker",'click [data-name="remove-marker"]':"remove_marker",'change [id$="-marker-label"]':"update_marker_label"},is_default_label:function(){var e=this.$el.find('[id$="-marker-default-label"]').val();return this.$el.find('[id$="-marker-label"]').val()===e},initialize:function(e){return this.template=e.template,this.marker=e.marker,this},render:function(){return this.$el.html(this.template(this)),this._update_values_from_marker(),this},update_marker_label:function(t){return this.set_marker_label(e(t.target).val())},set_marker_label:function(t){return this.marker.unbindTooltip(),this.marker.bindTooltip(t),this.marker.options.title=t,e(this.marker._icon).attr("title",t),this},update_marker:function(e,t){return this.is_default_label()&&this.set_marker_label(t),this.$el.find('[id$="-marker-default-label"]').val(t),this._update_values_from_marker(),this},_update_values_from_marker:function(){var e=this.marker.getLatLng();return this.$el.find('[id$="-marker-lat"]').val(e.lat),this.$el.find('[id$="-marker-lng"]').val(e.lng),this.$el.find('[id$="-marker-label"]').val(this.marker.options.title),this},locate_marker:function(){return this.marker._map.flyTo(this.marker.getLatLng()),e(this.marker._icon).focus(),this},remove_marker:function(e){return e.preventDefault(),this.marker.remove(),this}}),i.field=Backbone.View.extend({map:null,geocoder:null,visible:null,events:{},$parent:function(){return this.$el.closest(".acf-field-settings,.acf-field-open-street-map")},$zoom:function(){return this.$parent().find('input[id$="-zoom"]')},$lat:function(){return this.$parent().find('input[id$="-center_lat"]')},$lng:function(){return this.$parent().find('input[id$="-center_lng"]')},$layerStore:function(){return this.$parent().find(".acf-osm-layers")},$results:function(){return this.$parent().find(".osm-results")},$markers:function(){return this.$parent().find(".osm-markers")},initialize:function(e){return this.map=e.map,this.update_map(),this.init_acf(),this.init_layers(),this.init_markers(),this.update_visible(),this},_get_geocoder_result_label:function(t,a){var i=!1;return t.length?e.each(t,function(e,t){return i=t.html?t.html:t.name,!1}):i=a.lat.toString()+", "+a.lng.toString(),e(i).text().replace(/^(\s+)/g,"").replace(/(\s+)$/g,"")},init_markers:function(){var t=this;this.icon=new L.DivIcon({html:"",className:"osm-marker-icon"}),this.init_geocode(),this.map.on("click",function(e){var a=e.latlng;t.geocoder.options.geocoder.reverse(e.latlng,t.map.getZoom(),function(e){var i=t._get_geocoder_result_label(e,a);t.add_marker(a,i)},t)}),this.map.on("layeradd",function(e){if(e.layer.constructor===L.Marker){var a=t.$markers().find('[data-id="__osm_marker_template__"]').html().split("__osm_marker_template__").join("<%= id %>"),r=new i.MarkerEntry({controller:this,marker:e.layer,id:acf.uniqid(),template:_.template(a)});r.render().$el.prependTo(t.$markers()),e.layer.setIcon(t.icon).on("click",function(e){this.remove()}).on("remove",function(e){r.$el.remove()}).on("dragend",function(e){t.geocoder.options.geocoder.reverse(this.getLatLng(),t.map.getZoom(),function(e){var a=this.getLatLng(),i=t._get_geocoder_result_label(e,a);r.update_marker(a,i)},this)}).dragging.enable()}}),e.each(this.$el.data().mapMarkers,function(e,a){L.marker(L.latLng(1*a.lat,1*a.lng),{title:a.label}).bindTooltip(a.label).addTo(t.map)})},add_marker:function(e,t){L.marker(e,{title:t,icon:this.icon}).bindTooltip(t).addTo(this.map)},layer_is_overlay:function(e,t){var a;return!!(t.options.opacity&&t.options.opacity<1)||(a=["^(OpenWeatherMap|OpenSeaMap)","OpenMapSurfer.AdminBounds","Stamen.Toner(Hybrid|Lines|Labels)","Acetate.(foreground|labels|roads)","HillShading","Hydda.RoadsAndLabels","^JusticeMap","OpenInfraMap.(Power|Telecom|Petroleum|Water)","OpenPtMap","OpenRailwayMap","OpenFireMap","SafeCast","CartoDB.DarkMatterOnlyLabels","CartoDB.PositronOnlyLabels"],null!==e.match("("+a.join("|")+")"))},init_layers:function(){var t=this,i=[],r={},n={},o={},l=function(e){return null===e},s=function(d,m){var c,u;if(_.isObject(m))return e.each(m,s);l(d)||(o[d]?(c=o[d],t.map.addLayer(c)):(u=a.layer_config[d.split(".")[0]]||{options:{}},c=L.tileLayer.provider(d,u.options),c.providerKey=d),t.layer_is_overlay(d,c)?n[d]=c:r[d]=c,-1!==i.indexOf(d)&&t.map.addLayer(c))};i=this.$el.data().mapLayers,this.$layerStore().length&&this.map.on("baselayerchange layeradd layerremove",function(e){if(e.layer.providerKey){var a=t.$layerStore(),i=t.$parent().find('[data-id="__osm_layer_template__"]');a.html(""),t.map.eachLayer(function(e){if(e.providerKey){var r=i.clone().removeAttr("data-id");r.val(e.providerKey),t.layer_is_overlay(e.providerKey,e)?a.append(r):a.prepend(r)}})}}),e.each(a.providers,s),this.$layerStore().length&&(this.layersControl=L.control.layers(r,n,{collapsed:!0,hideSingleBase:!0}).addTo(this.map))},init_geocode:function(){var t=this;this.map._controlCorners.above=e('<div class="acf-osm-above"></div>').insertBefore(this.$el).get(0),this.geocoder=L.Control.geocoder({collapsed:!1,position:"above",placeholder:"Search...",errorMessage:"Nothing found...",showResultIcons:!0,suggestMinLength:3,suggestTimeout:250,queryMinLength:3,defaultMarkGeocode:!1}).on("markgeocode",function(e){var a=t._get_geocoder_result_label([e.geocode],e.geocode.center);t.add_marker(e.geocode.center,a),t.map.fitBounds(e.geocode.bbox)}).addTo(this.map),L.DomEvent.addListener(this.geocoder._input,"keydown",function(e){13===e.keyCode&&e.preventDefault()},this.geocoder)},update_visible:function(){return this.visible===this.$el.is(":visible")?this:(this.visible=this.$el.is(":visible"),this.visible?(this.map.invalidateSize(),this.bind_events(),this):(this.unbind_events(),this))},init_acf:function(){var t=this,a=function(){t.update_visible()};acf.addAction("show",a),acf.addAction("hide",a),e(document).on("postbox-toggled",a),this.map.on("zoomend",function(e){t.map_zoomed.apply(t,[e])}),this.map.on("moveend",function(e){t.map_moved.apply(t,[e])})},unbind_events:function(){var e=this;e.$lat().off("blur"),e.$lng().off("blur"),e.$zoom().off("blur"),e.$zoom().off("keyup focus")},bind_events:function(){var e=this;e.$lat().on("blur",function(t){e.update_map()}),e.$lng().on("blur",function(t){e.update_map()}),e.$zoom().on("blur",function(t){e.update_map()})},update_map:function(){if(this.$lat().val()&&this.$lng().val()){var e=L.latLng(this.$lat().val(),this.$lng().val());this.map.setView(e,this.$zoom().val())}},map_moved:function(e){var t=this.map.getCenter();this.$lat().val(t.lat),this.$lng().val(t.lng)},map_zoomed:function(e){this.$zoom().val(this.map.getZoom())}}),e(document).on("acf-osm-map-init",function(e,t){e.preventDefault(),new i.field({el:e.target,map:t})})}(jQuery,acf_osm_admin);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
