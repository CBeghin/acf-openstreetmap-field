!function(e,t){var i=t.options,n={};n.MarkerList=Backbone.View.extend({}),n.MarkerEntry=Backbone.View.extend({tagName:"div",className:"osm-marker",events:{'click [data-name="locate-marker"]':"locate_marker",'click [data-name="remove-marker"]':"remove_marker"},initialize:function(e){return this.template=e.template,this.marker=e.marker,this},render:function(){return this.$el.html(this.template(this)),this.update_marker(),this},update_marker:function(){return this.$el.find('[id$="-marker-lat"]').val(this.marker.getLatLng().lat),this.$el.find('[id$="-marker-lng"]').val(this.marker.getLatLng().lng),this.$el.find('[id$="-marker-label"]').val(this.marker.options.title),this},locate_marker:function(){return this.marker._map.flyTo(this.marker.getLatLng()),e(this.marker._icon).focus(),this},remove_marker:function(e){return e.preventDefault(),this.marker.remove(),this}}),n.field=Backbone.View.extend({map:null,geocoder:null,visible:null,events:{},$parent:function(){return this.$el.closest(".acf-field-settings,.acf-field-open-street-map")},$zoom:function(){return this.$parent().find('input[id$="-zoom"]')},$lat:function(){return this.$parent().find('input[id$="-center_lat"]')},$lng:function(){return this.$parent().find('input[id$="-center_lng"]')},$layerStore:function(){return this.$parent().find('input[id$="-leaflet_layers"]')},$results:function(){return this.$parent().find(".osm-results")},$markers:function(){return this.$parent().find(".osm-markers")},initialize:function(e){return this.map=e.map,this.update_map(),this.init_layers(),this.init_markers(),this.init_acf(),this.update_visible(),this},_get_geocoder_result_label:function(t,i){var n=!1;return t.length?e.each(t,function(e,t){return n=t.html?t.html:t.name,!1}):n=i.lat.toString()+", "+i.lng.toString(),e(n).text().replace(/^(\s+)/g,"").replace(/(\s+)$/g,"")},init_markers:function(){var t=this;this.icon=new L.DivIcon({html:"",className:"osm-marker-icon"}),this.init_geocode(),this.map.on("click",function(e){var i=e.latlng;t.geocoder.options.geocoder.reverse(e.latlng,t.map.getZoom(),function(e){var n=t._get_geocoder_result_label(e,i);t.add_marker(i,n)},t)}),this.map.on("layeradd",function(i){if(i.layer.constructor===L.Marker){var a=t.$markers().find('[data-id="__osm_marker_template__"]').html().split("__osm_marker_template__").join("<%= id %>"),r=new n.MarkerEntry({controller:this,marker:i.layer,id:acf.uniqid(),template:_.template(a)});r.render().$el.prependTo(t.$markers()),i.layer.setIcon(t.icon).on("click",function(e){this.remove()}).on("remove",function(e){r.$el.remove()}).on("dragend",function(i){t.geocoder.options.geocoder.reverse(this.getLatLng(),t.map.getZoom(),function(i){var n=t._get_geocoder_result_label(i,this.getLatLng());this.unbindTooltip(),this.bindTooltip(n),this.options.title=n,e(this._icon).attr("title",n),r.update_marker()},this)}).dragging.enable()}})},add_marker:function(e,t){L.marker(e,{title:t,icon:this.icon}).bindTooltip(t).addTo(this.map)},layer_is_overlay:function(e,t){var i;return!!(t.options.opacity&&t.options.opacity<1)||(i=["^(OpenWeatherMap|OpenSeaMap)","OpenMapSurfer.AdminBounds","Stamen.Toner(Hybrid|Lines|Labels)","Acetate.(foreground|labels|roads)","HillShading","Hydda.RoadsAndLabels","^JusticeMap","OpenInfraMap.(Power|Telecom|Petroleum|Water)","OpenPtMap","OpenRailwayMap","OpenFireMap","SafeCast","CartoDB.DarkMatterOnlyLabels","CartoDB.PositronOnlyLabels"],null!==e.match("("+i.join("|")+")"))},init_layers:function(){var t=this,n=[],a={},r={},o=function(e){return null===e},s=function(l,d){var c,m;if(_.isObject(d))return e.each(d,s);o(l)||(m=i.layer_config[l.split(".")[0]]||{options:{}},c=L.tileLayer.provider(l,m.options),c.providerKey=l,console.log(n),t.layer_is_overlay(l,c)?r[l]=c:a[l]=c,-1!==n.indexOf(l)&&t.map.addLayer(c))};n=this.$el.data().mapLayers,e.each(i.providers,s),this.$layerStore().length&&(this.layersControl=L.control.layers(a,r,{collapsed:!0,hideSingleBase:!0}).addTo(this.map))},init_geocode:function(){var t=this;this.map._controlCorners.above=e('<div class="acf-osm-above"></div>').insertBefore(this.$el).get(0),this.geocoder=L.Control.geocoder({collapsed:!1,position:"above",placeholder:"Search...",errorMessage:"Nothing found...",showResultIcons:!0,suggestMinLength:3,suggestTimeout:250,queryMinLength:3,defaultMarkGeocode:!1}).on("markgeocode",function(e){var i=t._get_geocoder_result_label([e.geocode],e.geocode.center);t.add_marker(e.geocode.center,i),t.map.fitBounds(e.geocode.bbox)}).addTo(this.map),L.DomEvent.addListener(this.geocoder._input,"keydown",function(e){13===e.keyCode&&e.preventDefault()},this.geocoder)},update_visible:function(){return this.visible===this.$el.is(":visible")?this:(this.visible=this.$el.is(":visible"),this.visible?(this.map.invalidateSize(),this.bind_events(),this):(this.unbind_events(),this))},init_acf:function(){var t=this,i=function(){t.update_visible()};acf.addAction("show",i),acf.addAction("hide",i),e(document).on("postbox-toggled",i),this.map.on("zoomend",function(e){t.map_zoomed.apply(t,[e])}),this.map.on("moveend",function(e){t.map_moved.apply(t,[e])}),this.map.on("baselayerchange overlayadd overlayremove layeradd layerremove",function(e){var i=[];t.map.eachLayer(function(e){console.log(e),e.providerKey&&(t.layer_is_overlay(e.providerKey,e)?i.push(e.providerKey):i.unshift(e.providerKey))}),t.$layerStore().val(JSON.stringify(i))})},unbind_events:function(){var e=this;e.$lat().off("blur"),e.$lng().off("blur"),e.$zoom().off("blur"),e.$zoom().off("keyup focus")},bind_events:function(){var e=this;e.$lat().on("blur",function(t){e.update_map()}),e.$lng().on("blur",function(t){e.update_map()}),e.$zoom().on("blur",function(t){e.update_map()})},update_map:function(){if(this.$lat().val()&&this.$lng().val()){var e=L.latLng(this.$lat().val(),this.$lng().val());this.map.setView(e,this.$zoom().val())}},map_moved:function(e){var t=this.map.getCenter();this.$lat().val(t.lat),this.$lng().val(t.lng)},map_zoomed:function(e){this.$zoom().val(this.map.getZoom())}}),e(document).on("pre-render-map",function(e,t){new n.field({el:e.target,map:t})})}(jQuery,acf_osm_admin);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
