!function(e,t,n){e(document).on("acf-osm-map-admin-init",(function(e){e.detail.map.getContainer()._leaflet_map=e.detail.map,e.detail.map.getContainer()._leaflet_map_admin=e.detail.mapAdmin}));var a=function(e){return e.$fieldObject.find(".leaflet-map").get(0)._leaflet_map},i=acf.FieldSetting.extend({type:"open_street_map",name:"return_format",events:{change:"onChange"},onChange:function(e,t){var n=this.$fieldObject.find(".leaflet-map").get(0)._leaflet_map_admin;n.removeControl("providers"),"osm"===this.$el.find(":checked").val()?(Object.values(a(this)._layers).forEach((function(e){return e.remove()})),n.addControl({type:"providers",config:Object.values(acf_osm_admin.options.osm_layers)}).setLayer("OpenStreetMap.Mapnik")):n.addControl({type:"providers",config:Object.values(acf_osm_admin.options.leaflet_layers)})}}),l=acf.FieldSetting.extend({type:"open_street_map",name:"center_lat",events:{'change [type="number"]':"onChange"},onChange:function(e,t){a(this).setView({lat:parseFloat(this.fieldObject.$input("center_lat").val()),lng:parseFloat(this.fieldObject.$input("center_lng").val())},parseInt(this.fieldObject.$input("zoom").val()))}}),o=acf.FieldSetting.extend({type:"open_street_map",name:"leaflet_map",events:{"change .osm-json":"onChange"},onChange:function(e,t){var n=a(this),i=n.getCenter();this.fieldObject.setProp("center_lat",i.lat),this.fieldObject.setProp("center_lng",i.lng),this.fieldObject.setProp("zoom",n.getZoom())}});acf.registerFieldSetting(i),acf.registerFieldSetting(l),acf.registerFieldSetting(o)}(jQuery,acf_osm_admin,window);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,